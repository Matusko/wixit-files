Description: Create a CodePipeline for wixit-auth stack set with nested stacks.

Parameters:
  ArtifactStoreS3Location:
    Type: String
    Description: Name of the S3 bucket to store clodformation CodePipeline artificats.
  GitHubInfrastructureRepo:
    Type: String
  GitHubInfrastructureBranch:
    Type: String
  GitHubToken:
    Type: String
    NoEcho: true
  GitHubUser:
    Type: String
  StageLevel:
    Type: String
    Default: test
    AllowedValues:
      - test
      - dev
      - prod

Conditions:
  EnableProd: !Equals [!Ref StageLevel, prod]
  EnableDev: !Or [!Equals [!Ref StageLevel, dev], Condition: EnableProd]

Resources:
  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodePipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        -
          PolicyName: "CodePipelineNestedCFNAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                Resource:
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/*
              -
                Effect: "Allow"
                Action:
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:CreateStack"
                  - "cloudformation:CreateUploadBucket"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}-DEV*
                  - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}-UAT*
                  - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}-PROD*
              -
                Effect: "Allow"
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/BuildCopyCFN-${AWS::StackName}
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/BuildCopyCFN-${AWS::StackName}:*
              -
                Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource:
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/CloudFormationRole-${AWS::StackName}
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning


  CloudFormationRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CloudFormationRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        -
          PolicyName: "CloudFormationNestedCFNAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "iam:AddRoleToInstanceProfile"
                  - "iam:AttachRolePolicy"
                  - "iam:CreateInstanceProfile"
                  - "iam:CreatePolicy"
                  - "iam:CreateRole"
                  - "iam:DeleteInstanceProfile"
                  - "iam:DeletePolicy"
                  - "iam:DeleteRole"
                  - "iam:DeleteRolePolicy"
                  - "iam:DetachRolePolicy"
                  - "iam:GetInstanceProfile"
                  - "iam:GetPolicy"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "iam:ListAttachedRolePolicies"
                  - "iam:ListInstanceProfiles"
                  - "iam:ListInstanceProfilesForRole"
                  - "iam:ListRolePolicies"
                  - "iam:ListRoles"
                  - "iam:PassRole"
                  - "iam:PutRolePolicy"
                  - "iam:RemoveRoleFromInstanceProfile"
                Resource:
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/WebServerIAMRole-*
              -
                Effect: "Allow"
                Action:
                  - "iam:AddRoleToInstanceProfile"
                  - "iam:CreateInstanceProfile"
                  - "iam:DeleteInstanceProfile"
                  - "iam:GetInstanceProfile"
                  - "iam:ListInstanceProfiles"
                  - "iam:ListInstanceProfilesForRole"
                  - "iam:RemoveRoleFromInstanceProfile"
                Resource:
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:instance-profile/${AWS::StackName}-DEV-SecurityStack*
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:instance-profile/${AWS::StackName}-UAT-SecurityStack*
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:instance-profile/${AWS::StackName}-PROD-SecurityStack*
              -
                Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource:
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/*
              -
                Effect: "Allow"
                Action:
                  - "apigateway:*"
                Resource:
                  - Fn::Sub: arn:aws:apigateway:${AWS::Region}::/restapis
                  - Fn::Sub: arn:aws:apigateway:${AWS::Region}::/restapis/*
              -
                Effect: "Allow"
                Action:
                  - "s3:*"
                Resource:
                  - Fn::Sub: arn:aws:s3:::wixit-files-bucket
              -
                Effect: "Allow"
                Action:
                  - "iam:*"
                Resource:
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/FilesBucketProxyRole
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        -
          PolicyName: "CodeBuildNestedCFNAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "cloudformation:Get*"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                Resource:
                  - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Test-${AWS::StackName}*
              -
                Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                Resource:
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}
              -
                Effect: "Allow"
                Action:
                  - "logs:*"
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              -
                Effect: "Allow"
                Action:
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - "*"

  BuildCopyCFNProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: BuildCopyCFN-${AWS::StackName}
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
        Type: LINUX_CONTAINER
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: cloudformation/buildspec.yml
      TimeoutInMinutes: 15

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ArtifactStoreS3Location


  DeployPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name:
        Fn::Sub: ContinuousDeliveryNestedCFN-${AWS::StackName}
      RoleArn:
        Fn::GetAtt: [ CodePipelineRole, Arn ]
      Stages:
        -
          Name: CFNSource
          Actions:
            -
              Name: CFNTemplateSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                -
                  Name: CFNTemplateOutput
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubInfrastructureRepo
                Branch: !Ref GitHubInfrastructureBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        -
          Name: Build
          Actions:
            -
              Name: CodeBuild
              InputArtifacts:
                - Name: CFNTemplateOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                -
                  Name: BuildOutput
              Configuration:
                ProjectName:
                  Ref: BuildCopyCFNProject
              RunOrder: 1
        - !If
          - EnableDev
          - Name: Dev
            Actions:
              -
                Name: CreateDevChangeSet
                InputArtifacts:
                  -
                    Name: BuildOutput
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                OutputArtifacts:
                  -
                    Name: CreatedDevChangeSet
                Configuration:
                  ActionMode: CHANGE_SET_REPLACE
                  ChangeSetName: DevCBChangeSet
                  RoleArn:
                    Fn::GetAtt: [ CloudFormationRole, Arn ]

                  Capabilities: CAPABILITY_NAMED_IAM
                  StackName:
                    Fn::Sub: ${AWS::StackName}-DEV
                  TemplatePath: BuildOutput::cloudformation/stackset/microservice.yaml
                RunOrder: 1
              -
                Name: DeployDev
                InputArtifacts:
                  -
                    Name: CreatedDevChangeSet
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                Configuration:
                  ActionMode: CHANGE_SET_EXECUTE
                  ChangeSetName: DevCBChangeSet
                  StackName:
                    Fn::Sub: ${AWS::StackName}-DEV
                RunOrder: 2
          - !Ref AWS::NoValue

      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreS3Location